;

        var mymap = null;
        resetMap(data);

        var days = {
            0: "Sundays",
            1: "Mondays",
            2: "Tuesdays",
            3: "Wednesdays",
            4: "Thursdays",
            5: "Fridays",
            6: "Saturdays"
        };

        function filterDay(day) {
            console.log(day);
            filteredData = []
            for (var i = 0; i < data.length; i++) {
                var meetings = data[i].meetings
                var filteredMeetings = meetings.filter(m => m.day == days[day])
                if (filteredMeetings.length > 0) {
                    newData = data[i]
                    newData.meetings = filteredMeetings
                    filteredData.push(newData)
                }
            }
            console.log(data)
            console.log(filteredData)
            resetMap(filteredData);
        }

        function resetMap(data) {
            if (mymap != null) {
                mymap.off();
                mymap.remove();
            }
            mymap = L.map('mapid').setView([40.734636, -73.994997], 13);
            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                attribution: '© <a href="https://www.mapbox.com/about/maps/">Mapbox</a> © <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> <strong><a href="https://www.mapbox.com/map-feedback/" target="_blank">Improve this map</a></strong>',
                tileSize: 512,
                maxZoom: 18,
                zoomOffset: -1,
                id: 'mapbox/streets-v11',
                accessToken: 'pk.eyJ1Ijoidm9ucmFtc3kiLCJhIjoiY2pveGF1MmxoMjZnazNwbW8ya2dsZTRtNyJ9.mJ1kRVrVnwTFNdoKlQu_Cw'
            }).addTo(mymap);

            addToMap(data, mymap);
        }

        function addToMap(data, mymap) {

            for (var i = 0; i < data.length; i++) {
                L.marker([data[i].lat, data[i].lon]).bindPopup(JSON.stringify(data[i].meetings)).addTo(mymap);
            }

        }

        function convertTime12to24(timefull) {
            var [puretime, modifier] = timefull.split(' ');
            var [hours, minutes] = puretime.split(':');

            if (hours === '12') {
                hours = 0;
            }
            if (modifier === 'PM') {
                hours = parseInt(hours, 10) + 12;
            }
            return [hours, minutes];
        }

        function filterTime(hour,minute,side) {
            filteredData = []
            for (var i = 0; i < data.length; i++) {
                var meetings = data[i].meetings
                if (side == 0) {
                    var filteredMeetings = meetings.filter(m =>  
                        convertTime12to24(m.time)[0] >= hour && convertTime12to24(m.time)[1] >= minute)
                } else {
                    var filteredMeetings = meetings.filter(m => 
                        convertTime12to24(m.time)[0] <= hour && convertTime12to24(m.time)[1] <= minute)                }
                if (filteredMeetings.length > 0) {
                    newData = data[i];
                    newData.meetings = filteredMeetings;
                    filteredData.push(newData);
                }
            }
            console.log(data)
            console.log(filteredData)
            resetMap(filteredData);
        }

        $("#slider-range").slider({
            range: true,
            min: 0,
            max: 1440,
            step: 15,
            values: [540, 1020],
            slide: function (e, ui) {

                var hours1 = Math.floor(ui.values[0] / 60);
                var minutes1 = ui.values[0] - (hours1 * 60);
                
                filterTime(hours1,minutes1,0);

                if (hours1.length == 1) hours1 = '0' + hours1;
                if (minutes1.length == 1) minutes1 = '0' + minutes1;
                if (minutes1 == 0) minutes1 = '00';
                if (hours1 >= 12) {
                    if (hours1 == 12) {
                        hours1 = hours1;
                        minutes1 = minutes1 + " PM";
                    } else {
                        hours1 = hours1 - 12;
                        minutes1 = minutes1 + " PM";
                    }
                } else {
                    hours1 = hours1;
                    minutes1 = minutes1 + " AM";
                }
                if (hours1 == 0) {
                    hours1 = 12;
                    minutes1 = minutes1;
                }

                $('.slider-time').html(hours1 + ':' + minutes1);

                var hours2 = Math.floor(ui.values[1] / 60);
                var minutes2 = ui.values[1] - (hours2 * 60);

                filterTime(hours2,minutes2,1);

                if (hours2.length == 1) hours2 = '0' + hours2;
                if (minutes2.length == 1) minutes2 = '0' + minutes2;
                if (minutes2 == 0) minutes2 = '00';
                if (hours2 >= 12) {
                    if (hours2 == 12) {
                        hours2 = hours2;
                        minutes2 = minutes2 + " PM";
                    } else if (hours2 == 24) {
                        hours2 = 11;
                        minutes2 = "59 PM";
                    } else {
                        hours2 = hours2 - 12;
                        minutes2 = minutes2 + " PM";
                    }
                } else {
                    hours2 = hours2;
                    minutes2 = minutes2 + " AM";
                }

                $('.slider-time2').html(hours2 + ':' + minutes2);


            }
        });

    </script>
</body>

</html>